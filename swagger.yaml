openapi: 3.0.0
servers: []
info:
  version: "will-be-set-during-build"
  title: ORG.ID DID Document specification
  description: 
    Object definitions for the ORG.JSON part of ORG.ID of the Winding Tree 
    platform.
paths: {}
components:
  schemas:
    DIDDocument:
      title: ORG.JSON
      description: 
        Landing file for each ORG.ID. Link to this document is stored 
        in the '0xORG' smart contract.
      type: object
      required:
        - "@context"
        - id
        - created
        - updated
      properties:
        "@context":
          $ref: '#/components/schemas/ContextReference'
        id:
          $ref: '#/components/schemas/DIDReference'
        created:
          description: Date-time when the data was created.
          type: string
          format: date-time
        updated:
          description:
            Date-time when the data was last changed. Possibly used by consumers 
            to handle incremental updates and caching.
          type: string
          format: date-time
        publicKey: 
          description:
            List of public keys. Public keys are used for digital signatures, 
            encryption and other cryptographic operations, which in turn are 
            the basis for purposes such as authentication or establishing secure 
            communication with service endpoints. 
          type: array
          items:
            $ref: '#/components/schemas/PublicKeyReference'
        service:
          description: 
            One of the primary purposes of a DID document is to enable 
            discovery of service endpoints. A service endpoint can be 
            any type of service the DID subject wants to advertise, including 
            decentralized identity management services for further discovery, 
            authentication, authorization, or interaction.
          type: array
          items:
            $ref: '#/components/schemas/ServiceReference'
        trust:
          description: 
            The set of trust records of entity
          type: object
          required:
            - assertions
          properties:
            assertions:
              $ref: '#/components/schemas/TrustAssertionsReference'
            credentials:
              $ref: '#/components/schemas/TrustCredentialsReference'
        legalEntity:
          $ref: '#/components/schemas/LegalEntityReference'
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnitReference'
        serviceUnit:
          $ref: '#/components/schemas/ServiceUnitReference'
    
    LegalEntityReference:
      description:
        Legal information about this organization. Either stored directly 
        or as a signed relationship reference to another Organization 
        smart contract. Users must verify that the relationship signature 
        is valid (it did not expire and the signature was produced by someone
        associated with the organization).
      type: object
      required:
        - legalName
        - legalIdentifier
        - legalType
        - registeredAddress
        - location
        - contacts
      properties:
        legalName: 
          description: 
            The legal name of the business. A business might have more than one 
            legal name, particularly in countries with more than one official 
            language.
          type: string
        alternativeName:
          description: 
            A recognized name other than the legal name. Some jurisdictions 
            recognise concepts such as a trading name or alternative forms 
            of a legal entity's name. The Alternative Name property can be used 
            to record such names but should not be used to record translations 
            of the primary legal name. Where more than one legal name exists 
            and where they have equal standing but are expressed in different 
            languages, identify the language used in each of the multiple legal 
            names. It is notable that some jurisdictions regard the use of any 
            name other than the primary Legal Name as suspicious.
          type: string
        legalIdentifier:
          description:
            The identifier given to the legal entity by the authority with which it is registered.
          type: string
        identifiers:
          description: 
            A formally-issued identifier for the legal entity, other than the 
            one that confers legal status upon it. Legal entities may have any 
            number of identifiers (but only one legal identifier). For example, 
            in many jurisdictions, a business will have one or more tax numbers 
            associated with them which do not, by themselves, confer legal 
            entity status. The Identifier property must not be used to link 
            to the identifier issued by the authority that conferred legal 
            entity status on a business. 
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/LegalIdentifiersReference'
        legalType:
          description: 
            The type of the business. e.g. LLC,SA,PLC,GmbH
          type: string
        registeredAddress:
          $ref: '#/components/schemas/AddressReference'
        location:
          $ref: '#/components/schemas/LocationReference'
        contacts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ContactReference'
    
    OrganizationalUnitReference:
      description:
        Information about the organizational unit. e.g. Hotel, Agency
      type: object
      required: 
        - name
        - type
        - description
        - address
        - contacts
        - media
      properties:
        name:
          description:
            Name of the organizational unit. e.g. Grand Budapesht Hotel
          type: string
        "type":
          description:
            Type of the organizational unit. e.g. ["hotel", "boutique"]
          type: array
          items:
            allOf:
              - type: string
        "description":
          description:
            Short description of the organizational unit
          type: string
        longDescription:
          description:
            Long description of the organizational unit
          type: string
        address:
          $ref: '#/components/schemas/AddressReference'
        openingHours:
          $ref: '#/components/schemas/OpeningHoursReference'
        contacts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ContactReference'
        media:
          $ref: '#/components/schemas/MediaListReference'
    
    ServiceUnitReference:      
      description:
        Information about service unit. e.g. DID resolver or Verification service
      type: object
      required: 
        - name
      properties:
        name: 
          description:
            Name of the service unit
          type: string
        "description": 
          description:
            Description of the service unit
          type: string
            
    ContextReference:
      description:
        When two software systems need to exchange data, they need to use 
        terminology and a protocol that both systems understand. 
        The @context property ensures that two systems operating 
        on the same DID document are using mutually agreed terminology.
      oneOf:
        - $ref: '#/components/schemas/LinkedContextReference'
        - $ref: '#/components/schemas/LinkedMultipleContextReference'
        - $ref: '#/components/schemas/LinkedContextDocumentReference'
    
    LinkedContextReference: 
      description: Linked context URI
      type: string

    LinkedMultipleContextReference:
      description:
        A list of context references
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LinkedContextReference'
        
    LinkedContextDocumentReference:
      description: 
        Context document https://www.w3.org/TR/json-ld/#the-context
      type: object
    
    DIDReference:
      description: 
        The DID subject is denoted with the id property. The DID subject is the 
        entity that the DID document is about. That is, it is the entity 
        identified by the DID and described by the DID document. 
        e.g. "did:orgid:0xB4Caa470E33A4cE899C16e6C7E125eA03956e95D"
      type: string
    
    TrustAssertionsReference:
      description: 
        A list of claims with proofs
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/AssertsionsReference'
          
    AssertsionsReference:
      description:
        Trust assertion claim
      type: object
      required:
        - type
        - claim
        - proof
      properties:
        "type":
          description:
            The claim type. e.g. domain, twitter, facebook
          type: string
        claim:
          description:
            The claim subject. For example - account or domain name
          type: string
        proof:
          description:
            A proof of the claim. e.q. link to the file with DID inside or 
            DNS record
          type: string
          
    TrustCredentialsReference:
      description:
        Verifiable credentials list
      type: object
      required:
        - "@context"
        - id
        - type
        - issuanceDate
        - credentialSubject
        - proof
      properties:
        "@context":
          $ref: '#/components/schemas/ContextReference'
        id:
          $ref: '#/components/schemas/DIDReference'
        "type":
          description:
            Type of the credential
          type: array
          items:
            allOf:
              - type: string
        issuanceDate:
          description: 
            When the credential was issued
          type: string
          format: date-time
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubjectReference'
        proof:
          description:
            A proof on a DID document is cryptographic proof of the integrity of 
            the DID document. The value of the property MUST be a valid 
            JSON-LD proof, as defined by Linked Data Proofs
          type: array
          items:
            $ref: '#/components/schemas/ProofReference'
          
    CredentialSubjectReference:
      description: 
        Identifier for the only subject of the credential
      type: object
      required:
        - id
      properties:
        id: 
          $ref: '#/components/schemas/DIDReference'
            
    ProofReference:
      allOf:
        - description:
            A linked data proof is comprised of information about the proof, 
            parameters required to verify it, and the proof value itself.
        - oneOf:
          - $ref: '#/components/schemas/LdProofReference'
          - $ref: '#/components/schemas/LdSignatureReference'
          - $ref: '#/components/schemas/LdsRSA2018Reference'
      
    LdProofReference:
      description: Linked Data Proofs https://w3c-dvcg.github.io/ld-proofs/
      type: object        
      required:
        - type
        - proofPurpose
        - verificationMethod
        - created
        - proofValue
      properties:
        "type": 
          description:
            The specific proof type used. For example, an Ed25519Signature2018 
            type indicates that the proof includes a digital signature 
            produced by an ed25519 cryptographic key.
          type: string
        proofPurpose:
          description:
            The specific intent for the proof, the reason why an entity 
            created it. Acts as a safeguard to prevent the proof from being 
            misused for a purpose other than the one it was intended for. 
            For example, a proof can be used for purposes of authentication, 
            for asserting control of a Verifiable Credential (assertionMethod), 
            and several others. 
            e.q. authentication|assertionMethod|keyAgreement|contractAgreement
          type: string
        verificationMethod:
          description:
            A set of parameters required to independently verify the proof, 
            such as an identifier for a public/private key pair that would be 
            used in the proof.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        domain:
          description: A string value specifying the restricted domain of the proof.
          type: string
        challenge: 
          description: 
            A random or pseudo-random value used by some authentication protocols 
            to mitigate replay attacks
          type: string
        proofValue: 
          description: 
            One of any number of valid representations of proof value 
            generated by the Proof Algorithm.
          type: string 

    LdSignatureReference:
      description: 
        Linked Data Signatures https://w3c-dvcg.github.io/ld-signatures/
      type: object        
      required:
        - type
        - created
        - signatureValue
      properties:
        "type": 
          description: 
            A URI that identifies the digital signature suite that was used 
            to create the signature. For example Ed25519Signature2018.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        domain:
          description: 
            A string value specifying the restricted domain of the proof.
          type: string
        nonce: 
          description: 
            A string value that is included in the digital signature and MUST 
            only be used once for a particular domain and window of time. 
            This value is used to mitigate replay attacks.
          type: string
        verificationMethod:
          description:
            A set of parameters required to independently verify the proof, 
            such as an identifier for a public/private key pair that would be 
            used in the proof.
          type: string
        signatureValue: 
          description: 
            One of any number of valid representations of signature value 
            generated by the Signature Algorithm.
          type: string

    LdsRSA2018Reference:
      description: 
        RSA Signature Suite 2018 https://w3c-dvcg.github.io/lds-rsa2018/
      type: object        
      required:
        - type
        - created
        - signatureValue
      properties:
        "type": 
          description: 
            A URI that identifies the digital signature suite that was used to 
            create the signature. For example Ed25519Signature2018.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        creator:
          description: Link to proof creator or its DID
          type: string
        domain:
          description: 
            A string value specifying the restricted domain of the proof
          type: string
        signatureValue: 
          description: 
            One of any number of valid representations of signature value 
            generated by the Signature Algorithm
          type: string

    PublicKeyReference:
      description: 
        Public keys are used for digital signatures, encryption 
        and other cryptographic operations, which in turn are the basis for 
        purposes such as authentication or establishing secure communication 
        with service endpoints. 
      type: object
      required: 
        - id
        - type
        - controller
      properties:
        id:
          $ref: '#/components/schemas/DIDReference'
        "type":
          description: Public key type
          type: string
          enum: [RSA, ed25519, secp256k1-koblitz, secp256r1, Curve25519]
        controller:
          description: 
            Identifies the controller of the corresponding private key, 
            MUST be a valid DID.
          type: string
        "description":
          description: Textual note about a purpose or usage of the key
          type: string
        publicKeyPem:
          description: RSA public key value
          type: string
        publicKeyBase58:
          description: Ed25519 public key value
          type: string
        secp256k1-koblitz:
          description: Secp256k1 Koblitz public key value
          type: string
        Curve25519:
          description: Curve25519 (also known as X25519) public key value
          type: string

    ServiceReference:
      description: 
        One of the primary purposes of a DID document is to enable discovery 
        of service endpoints. A service endpoint can be any type of service 
        the DID subject wants to advertise, including decentralized identity 
        management services for further discovery, authentication, 
        authorization, or interaction.
      type: object
      required:
        - id
        - type
        - serviceEndpoint
      properties:
        id:
          $ref: '#/components/schemas/DIDReference'
        "type":
          description: Service endpoint type
          type: string
        serviceEndpoint:
          allOf:
            - description: 
                JSON-LD object or a valid URI conforming to [RFC3986] 
                and normalized according to the rules in section 6 of [RFC3986] 
                and to any normalization rules in its applicable URI scheme 
                specification.
            - oneOf:
              - $ref: '#/components/schemas/LinkedEndpointReference'
              - $ref: '#/components/schemas/LinkedDocumentEndpointReference'

    LinkedEndpointReference:
      description: 
        Service endpoint URI conforming to [RFC3986] and normalized according 
        to the rules in section 6 of [RFC3986] and to any normalization rules 
        in its applicable URI scheme specification.
      type: string

    LinkedDocumentEndpointReference:
      description: 
        Service endpoint document conforming to JSON-LD object 
        https://www.w3.org/TR/json-ld/
      type: object
      required:
        - "@context"
      properties:
        "@context":
          $ref: '#/components/schemas/ContextReference'
        "type":
          description: Service endpoint type
          type: string
          
    LegalIdentifiersReference:
      description:
        A set of legal identifiers obtained from registrators, associations etc.
      type: object
      required:
        - type
        - value
      properties:
        "type":
          description:
            The type of an identifier
          type: string
        value:
          description:
            Value of the identifier. e.g. IATA code or Trade license
          type: string
    
    AddressReference:
      description: 
        The registered address of the business. In almost all jurisdictions, 
        legal entities must register a postal address. This may or may not be 
        the actual address at which the legal entity does its business - 
        it is commonly the address of their lawyer or accountant - but it is 
        the address to which formal communications can be sent.
      type: object
      required:
        - country
        - subdivision
        - locality
        - postalCode
        - streetAddress
        - premise
      properties:
        country:
          description:
            A country code in "ISO 3166 alpha-2" country code standard
          type: string
        subdivision:
          description:
            Subdivision string
          type: string
        locality:
          description:
            City / Town
          type: string
        postalCode:
          description:
            Postal code / ZIP Code
          type: string
        streetAddress:
          description: 
            Street number
          type: string
        premise:
          description:
            Apartment, Suite, Box number, etc.
          type: string
        gps: 
          description:
            Geographic coordinates
          type: string
        geocodes:
          description:
            Special codes to ease locate an entity on the map
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/GeoCodeReference'
              
    GeoCodeReference:
      description:
        Special code obtained from the OLC or What3Words
      type: object
      required: 
        - type
        - value
      properties:
        "type":
          description:
            Geo code type. e.g. olc, what2words, etc.
          type: string
        value:
          description:
            Geo code value
          type: string
          
    LocationReference:
      description: 
        A location related to the business. Asserting the Location relationship 
        implies only that the legal entity has some connection to a location 
        in time or space. It does not imply that the legal entity is necessarily 
        at that location at the time when the assertion is made. 
      type: object
      required:
        - name
        - address
        - contacts
      properties:
        name:
          description: 
            Location name
          type: string
        "description":
          description: 
            Location description
          type: string
        address:
          $ref: '#/components/schemas/AddressReference'
        openingHours:
          $ref: '#/components/schemas/OpeningHoursReference'
        contacts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ContactReference'
    
    OpeningHoursReference:
      description:
        Opening hours of the entity
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OpeningHoursRangeReference'
        
    OpeningHoursRangeReference:
      description:
        Hours range
      type: object
      required:
        - weekDay
        - hours
      properties:
        weekDay:
          description:
            A week day in short form. e.g. sun,mon,tue... etc
          type: string
        hours:
          description:
            Formatted string with hours range. string MUST be formatted accordig 
            to mask HH:MM
          type: string
          pattern: '^[0-9]{2}-[0-9]{2}$'
          
    ContactReference:
      description:
        The entity contact
      type: object
      required:
        - function
        - phone
        - email
      properties:
        function:
          description: 
            The contact type that represents his job function.  
            e.g. Sales,IT,Marketing
          type: string
        name:
          description:
            The contact name
          type: string
        phone:
          description:
            The contact phone number
          type: string
        email:
          description:
            The contact email
          type: string
          format: email
        messengers:
          description:
            List of messangers accounts of the contact
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/MessengerReference'
        language:
          $ref: '#/components/schemas/LanguageReference'
          
    MessengerReference:
      description:
        Messanger account information
      type: object
      required:
        - type
        - value
      properties:
        "type":
          description:
            Messanger type. e.g. whatsup,telegram,viber,wechat,messanger,line
          type: string
        value:
          description:
            Messanger account 
          type: string
          
    LanguageReference:
      description:
        Language of the contact
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LanguageItemReference'
    
    LanguageItemReference:
      description:
        A languages code specifies a unique name for each culture based on 
        "RFC 4646" (Windows Vista and later). The name is a combination of 
        an "ISO 639" two-letter lowercase culture code associated with a language 
        and an "ISO 3166" two-letter uppercase subculture code associated with 
        a country or region. e.g. "en-US"
      type: string
      
    MediaListReference:
      description:
        List of the media files
      type: object
      required:
        - logo
      properties:
        logo:
          description:
            Logotype of the organizational unit
          type: string
          format: url
        images:
          description:
            List of images
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/MediaReference'
          
    MediaReference:
      description:
        Media file
      type: object
      required:
        - description
        - uri
      properties:
        "description": 
          description:
            Resource role description
          type: string
        cover:
          description: 
            Image that representing a video content
          type: string
          format: url
        thumbnail:
          description: 
            Thumbnail image
          type: string
          format: url
        uri:
          description:
            Link to the media resource. e.g. image of video file
          type: string
          format: uri    
          