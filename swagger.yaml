openapi: 3.0.0
servers: []
info:
  version: "will-be-set-during-build"
  title: ORG.ID DID Document specification
  description: 
    Object definitions for the ORG.JSON part of ORG.ID of the Winding Tree 
    platform.
paths: {}
components:
  schemas:
    DIDDocument:
      title: ORG.JSON
      description: 
        Landing file for each ORG.ID. Link to this document is stored 
        in the '0xORG' smart contract.
      type: object
      required:
        - "@context"
        - id
        - created
        - updated
      properties:
        "@context":
          description:
            DID document context. When two software systems need to exchange 
            data, they need to use terminology and a protocol that both systems 
            understand. The @context property ensures that two systems operating 
            on the same DID document are using mutually agreed terminology. 
            @context property should be represented by the link to document 
            schema. Standard DID context is https://www.w3.org/ns/did/v1
          type: string
        id:
          $ref: '#/components/schemas/DIDReference'
        proof:
          description:
            A proof on a DID document is cryptographic proof of the integrity of 
            the DID document. The value of the property MUST be a valid 
            JSON-LD proof, as defined by Linked Data Proofs
          type: array
          items:
            $ref: '#/components/schemas/ProofReference'
        publicKey: 
          description:
            List of public keys. Public keys are used for digital signatures, 
            encryption and other cryptographic operations, which in turn are 
            the basis for purposes such as authentication or establishing secure 
            communication with service endpoints. 
          type: array
          items:
            $ref: '#/components/schemas/PublicKeyReference'
        authentication: 
          description:
            Authentication is the mechanism by which DID controllers 
            can cryptographically prove that they are associated with a DID
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationReference'
        service:
          description: 
            One of the primary purposes of a DID document is to enable 
            discovery of service endpoints. A service endpoint can be 
            any type of service the DID subject wants to advertise, including 
            decentralized identity management services for further discovery, 
            authentication, authorization, or interaction.
          type: array
          items:
            $ref: '#/components/schemas/ServiceReference'
        created:
          description: Date-time when the data was created.
          type: string
          format: date-time
        updated:
          description:
            Date-time when the data was last changed. Possibly used by consumers 
            to handle incremental updates and caching.
          type: string
          format: date-time
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/LegalEntityReference'
        entity:
          allOf:
            - $ref: '#/components/schemas/EntityReference'
    
    DIDReference:
      description: 
        The DID subject is denoted with the id property. The DID subject is the 
        entity that the DID document is about. That is, it is the entity 
        identified by the DID and described by the DID document. 
        e.g. "did:orgid:0xB4Caa470E33A4cE899C16e6C7E125eA03956e95D"
      type: string
    
    ProofReference:
      allOf:
        - description:
            A linked data proof is comprised of information about the proof, 
            parameters required to verify it, and the proof value itself.
        - oneOf:
          - $ref: '#/components/schemas/LdProofReference'
          - $ref: '#/components/schemas/LdSignatureReference'
          - $ref: '#/components/schemas/LdsRSA2018Reference'
      
    LdProofReference:
      description: Linked Data Proofs https://w3c-dvcg.github.io/ld-proofs/
      type: object        
      required:
        - type
        - proofPurpose
        - verificationMethod
        - created
        - proofValue
      properties:
        "type": 
          description:
            The specific proof type used. For example, an Ed25519Signature2018 
            type indicates that the proof includes a digital signature 
            produced by an ed25519 cryptographic key.
          type: string
        proofPurpose:
          description:
            The specific intent for the proof, the reason why an entity 
            created it. Acts as a safeguard to prevent the proof from being 
            misused for a purpose other than the one it was intended for. 
            For example, a proof can be used for purposes of authentication, 
            for asserting control of a Verifiable Credential (assertionMethod), 
            and several others. 
            e.q. authentication|assertionMethod|keyAgreement|contractAgreement
          type: string
        verificationMethod:
          description:
            A set of parameters required to independently verify the proof, 
            such as an identifier for a public/private key pair that would be 
            used in the proof.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        domain:
          description: A string value specifying the restricted domain of the proof.
          type: string
        challenge: 
          description: 
            A random or pseudo-random value used by some authentication protocols 
            to mitigate replay attacks
          type: string
        proofValue: 
          description: 
            One of any number of valid representations of proof value 
            generated by the Proof Algorithm.
          type: string 

    LdSignatureReference:
      description: 
        Linked Data Signatures https://w3c-dvcg.github.io/ld-signatures/
      type: object        
      required:
        - type
        - created
        - signatureValue
      properties:
        "type": 
          description: 
            A URI that identifies the digital signature suite that was used 
            to create the signature. For example Ed25519Signature2018.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        domain:
          description: 
            A string value specifying the restricted domain of the proof.
          type: string
        nonce: 
          description: 
            A string value that is included in the digital signature and MUST 
            only be used once for a particular domain and window of time. 
            This value is used to mitigate replay attacks.
          type: string
        verificationMethod:
          description:
            A set of parameters required to independently verify the proof, 
            such as an identifier for a public/private key pair that would be 
            used in the proof.
          type: string
        signatureValue: 
          description: 
            One of any number of valid representations of signature value 
            generated by the Signature Algorithm.
          type: string

    LdsRSA2018Reference:
      description: 
        RSA Signature Suite 2018 https://w3c-dvcg.github.io/lds-rsa2018/
      type: object        
      required:
        - type
        - created
        - signatureValue
      properties:
        "type": 
          description: 
            A URI that identifies the digital signature suite that was used to 
            create the signature. For example Ed25519Signature2018.
          type: string
        created:
          description:
            The string value of an [ISO8601] combined date and time string 
            generated by the Proof Algorithm.
          type: string
          format: date-time
        creator:
          description: Link to proof creator or its DID
          type: string
        domain:
          description: 
            A string value specifying the restricted domain of the proof
          type: string
        signatureValue: 
          description: 
            One of any number of valid representations of signature value 
            generated by the Signature Algorithm
          type: string

    PublicKeyReference:
      description: 
        Public keys are used for digital signatures, encryption 
        and other cryptographic operations, which in turn are the basis for 
        purposes such as authentication or establishing secure communication 
        with service endpoints. 
      type: object
      required: 
        - id
        - type
        - controller
      properties:
        id:
          $ref: '#/components/schemas/DIDReference'
        "type":
          description: Public key type
          type: string
          enum: [RSA, ed25519, secp256k1-koblitz, secp256r1, Curve25519]
        controller:
          description: 
            Identifies the controller of the corresponding private key, 
            MUST be a valid DID.
          type: string
        "description":
          description: Textual note about a purpose or usage of the key
          type: string
        publicKeyPem:
          description: RSA public key value
          type: string
        publicKeyBase58:
          description: Ed25519 public key value
          type: string
        secp256k1-koblitz:
          description: Secp256k1 Koblitz public key value
          type: string
        Curve25519:
          description: Curve25519 (also known as X25519) public key value
          type: string

    AuthenticationReference:
      allOf:
        - description: 
            Authentication is the mechanism by which DID controllers 
            can cryptographically prove that they are associated with a DID.
        - oneOf:
          - $ref: '#/components/schemas/DIDReference'
          - $ref: '#/components/schemas/PublicKeyReference'
      
    ServiceReference:
      description: 
        One of the primary purposes of a DID document is to enable discovery 
        of service endpoints. A service endpoint can be any type of service 
        the DID subject wants to advertise, including decentralized identity 
        management services for further discovery, authentication, 
        authorization, or interaction.
      type: object
      required:
        - id
        - type
        - serviceEndpoint
      properties:
        id:
          $ref: '#/components/schemas/DIDReference'
        "type":
          description: Service endpoint type
          type: string
        serviceEndpoint:
          allOf:
            - description: 
                JSON-LD object or a valid URI conforming to [RFC3986] 
                and normalized according to the rules in section 6 of [RFC3986] 
                and to any normalization rules in its applicable URI scheme 
                specification.
            - oneOf:
              - $ref: '#/components/schemas/LinkedEndpointReference'
              - $ref: '#/components/schemas/LinkedDocumentEndpointReference'

    LinkedEndpointReference:
      description: 
        Service endpoint URI conforming to [RFC3986] and normalized according 
        to the rules in section 6 of [RFC3986] and to any normalization rules 
        in its applicable URI scheme specification.
      type: string

    LinkedDocumentEndpointReference:
      description: 
        Service endpoint document conforming to JSON-LD object 
        https://www.w3.org/TR/json-ld/
      type: object
      required:
        - "@context"
      properties:
        "@context":
          description: 
            When two people communicate with one another, the conversation takes 
            place in a shared environment, typically called "the context of the 
            conversation". This shared context allows the individuals to use 
            shortcut terms, like the first name of a mutual friend, to 
            communicate more quickly but without losing accuracy. A context 
            in JSON-LD works in the same way. It allows two applications to use 
            shortcut terms to communicate with one another more efficiently, 
            but without losing accuracy.
          oneOf:
            - $ref: '#/components/schemas/LinkedContextReference'
            - $ref: '#/components/schemas/LinkedContextDocumentReference'
        "type":
          description: Service endpoint type
          type: string

    LinkedContextReference: 
      description: Linked context URI
      type: string

    LinkedContextDocumentReference:
      description: 
        Context document https://www.w3.org/TR/json-ld/#the-context
      type: object
      
    AddressReference:
      description: 
        The registered address of the business. In almost all jurisdictions, 
        legal entities must register a postal address. This may or may not be 
        the actual address at which the legal entity does its business - 
        it is commonly the address of their lawyer or accountant - but it is 
        the address to which formal communications can be sent.
      type: object
      required: 
        - fullAddress
      properties:
        addressAdminUnitL1:
          description: 
            The uppermost administrative unit for the address, almost always 
            a country. Best practice is to use the ISO 3166-1 code but if this 
            is inappropriate for the context, country names should be provided 
            in a consistent manner to reduce ambiguity. For example, either 
            write 'United Kingdom' or 'UK' consistently throughout the data set 
            and avoid mixing the two. e.g. "UK", "United Kingdom"
          type: string
        addressAdminUnitL2:
          description: 
            The region of the address, usually a county, state or other 
            such area that typically encompasses several localities.
          type: string
        thoroughfare:
          description: 
            The name of a passage or way through from one location to another. 
            A thoroughfare is an address component that represents the name of 
            a passage or way through from one location to another. 
            A thoroughfare is not necessarily a road, it might be a waterway 
            or some other feature. e.g. "Main Street"
          type: string
        fullAddress:
          description: 
            The complete address with or without formatting. Use of this 
            property is recommended as it will not suffer any misunderstandings 
            that might arise through the breaking up of an address into its 
            component parts.
          type: string
        POBox:
          description: 
            The Post Office Box number.
          type: string
        addressID:
          description: 
            A globally unique identifier for this instance of the address. 
            The concept of adding a globally unique identifier for each instance 
            of an address is a crucial part of the INSPIRE data spec. A number 
            of EU countries have already implemented an ID (a UUID) in their 
            address register/gazetteer, among them Denmark. It is the address 
            identifier that allows an address to be represented in a format 
            other than INSPIRE whilst remaining conformant to the core 
            vocabulary. The identifier is a hook that can be used to link the 
            address to an alternative representation, such as vCard.
          type: string
        postCode:
          description: 
            The post code, a.k.a. postal code, ZIP code, etc. Post codes are 
            common elements in many countries' postal address systems.
          type: string
        postName:
          description: 
            The key postal division of the address, usually the city. 
            The post name is a name created and maintained for postal purposes 
            to identify a subdivision of addresses and postal delivery points. 
            e.g. "Brussels"
        locatorDesignator:
          description: 
            A number or a sequence of characters that uniquely identifies 
            the locator within the relevant scope. The locator designator is 
            a number or a sequence of characters that uniquely identifies 
            the locator within the relevant scope(s). The full identification 
            of the locator could include one or more locator designators. 
            In simpler terms, this is the building number, apartment number, 
            etc. It is characteristic that these designators, according to 
            tradition or to a specific set of rules, are assigned 
            systematically. For example address numbers are most often assigned 
            in ascending order with odd and even numbers on each side of the 
            thoroughfare. Another example is the floor identifier that in 
            a standardized way expresses on which level the address is located. 
            The key difference between a locator designator and a locator name 
            is that the latter is a proper name and is unlikely to include 
            digits.
          type: string
        locatorName:
          description: 
            A proper noun applied to the real world entity identified by 
            the address. The locator name is a proper noun applied to the real 
            world entity identified by the locator. The locator name could be 
            the name of the property or complex, of the building or part of 
            the building, or it could be the name of a room inside a building. 
            The key difference between a locator designator and a locator name 
            is that the latter is a proper name and is unlikely to include 
            digits. e.g. "Rose Cottage", "Grand Suite", 
            "The little house by the lake"
          type: string
          
    LocationReference:
      description: 
        A location related to the business. Asserting the Location relationship 
        implies only that the legal entity has some connection to a location 
        in time or space. It does not imply that the legal entity is necessarily 
        at that location at the time when the assertion is made. 
      type: object
      properties:
        "description":
          description: 
            Location description
          type: string
        address:
          $ref: '#/components/schemas/AddressReference'
        geographicName:
          description: 
            A proper noun applied to a spatial object. The country codes defined 
            in "ISO 3166" may be used as geographic names and these are generally 
            preferred over either the long form or short form of a country's 
            name (as they are less error prone). The Publications Office of 
            the European Union recommends the use of "ISO 3166-1" codes for 
            countries in all cases except two - use "UK" in preference to 
            the "ISO 3166" code GB for the United Kingdom; - use "EL" in 
            preference to the "ISO 3166" code GR for Greece. Where a country 
            has changed its name or no longer exists (such as Czechoslovakia, 
            Yugoslavia, etc.) use the "ISO 3166-3" code. Known diversity that 
            one has to deal with when exchanging country names between different 
            communication partners without relying on an agreed code list are 
            a. Long form vs. short form of a country name (e.g. “Federal 
            Republic of Germany” vs. Germany), b. Different languages (Italy vs. 
            Italia), c. Historic name vs. Current name (Burma vs. Myanmar), d. 
            Ambiguity of similar sounding countries (“Republic of the Congo” vs. 
            “Democratic Republic of the Congo”). e.g. "Athens", "DE"
          type: string
        geographicIdentifier:
          description:
            A URI that identifies the location. GeoNames.org provides stable, 
            widely recognised identifiers for more than "10" million 
            geographical names that can be used as links to further information. 
            For example, "http://sws.geonames.org/593116/"" identifies 
            the Lithuanian capital Vilnius. 
            Unfortunately these URIs cannot easily be automatically 
            deduced since the URI scheme uses simple numeric codes. Finding a 
            GeoNames identifier for a location is almost always a manual process. 
            Where such identifiers are known or can be found, however, 
            it is recommended to use them. Where the Location class is used to 
            identify a country, if the GeoNames URI is not known, the 
            recommendation is to use the URI from the Named Authority List (NAL) 
            for countries of the Publications Office of the EU. As noted for the 
            Georaphic Name property, the EU's Publication Office diverges from 
            "ISO 3166-1" and uses EL and UK for Greece and the United Kingdom 
            respectively. e.g. "http://sws.geonames.org/593116/", 
            "http://publications.europa.eu/resource/authority/country/AUT"
          type: string
        geometry:
          $ref: '#/components/schemas/GeometryReference'
        openingHours:
          $ref: '#/components/schemas/OpeningHoursReference'
        contact:
          $ref: '#/components/schemas/ContactReference'
    
    GeometryReference:    
      description: 
        An identifiable geographic place
      type: object
      required:
        - type
        - coordinates
      properties:
        "type":
          description: Geographic geometry type. e.g. "point"
        coordinates:
          description: 
            The ordered list of coordinates of the geometry. 
            e.g. [[lat], [long]]
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/GeographicPointReference'
    
    GeographicPointReference:
      description:
        Coordinate of the geographic point latitude or longitude
      type: number
    
    OpeningHoursReference:
      description:
        Opening hours of the entity
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/OpeningHoursRangeReference'
        
    OpeningHoursRangeReference:
      description:
        Hours range
      type: object
      required:
        - weekDay
        - hours
      properties:
        weekDay:
          description:
            A week day in short form. e.g. sun,mon,tue... etc
          type: string
        hours:
          description:
            Formatted string with hours range. string MUST be formatted accordig 
            to mask HH:MM
          type: string
          pattern: '^[0-9]{2}-[0-9]{2}$'
          
    ContactReference:
      description:
        The entity contact
      type: object
      properties:
        "type":
          description: 
            The contact type that represents his job function.  
            e.g. Sales,IT,Marketing
          type: string
        "description":
          description:
            Additional description of the contact
          type: string
        phone:
          $ref: '#/components/schemas/PhoneReference'
        language:
          $ref: '#/components/schemas/LanguageReference'
          
    PhoneReference:
      description:
        The contact phone
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/PhoneNumberReference'
          
    PhoneNumberReference:
      description:
        Phone number
      type: object
      required:
        - type
        - number
      properties:
        "type":
          description: 
            The phone type function. e.g. phone,fax,telex
          type: string
          enum: [phone, fax, telex]
        "description":
          description: 
            Information about of the phone functional role.
            e.g. New customers registrations
          type: string
        number:
          description: 
            The phone number
          type: string
          
    LanguageReference:
      description:
        Language of the contact
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/LanguageItemReference'
    
    LanguageItemReference:
      description:
        A languages code specifies a unique name for each culture based on 
        "RFC 4646" (Windows Vista and later). The name is a combination of 
        an "ISO 639" two-letter lowercase culture code associated with a language 
        and an "ISO 3166" two-letter uppercase subculture code associated with 
        a country or region. e.g. "en-US"
      type: string
      
    LegalEntityReference:
      description:
        Legal information about this organization. Either stored directly 
        or as a signed relationship reference to another Organization 
        smart contract. Users must verify that the relationship signature 
        is valid (it did not expire and the signature was produced by someone
        associated with the organization).
      type: object
      properties:
        legalName: 
          description: 
            The legal name of the business. A business might have more than one 
            legal name, particularly in countries with more than one official 
            language.
          type: string
        alternativeName:
          description: 
            A recognized name other than the legal name. Some jurisdictions 
            recognise concepts such as a trading name or alternative forms 
            of a legal entity's name. The Alternative Name property can be used 
            to record such names but should not be used to record translations 
            of the primary legal name. Where more than one legal name exists 
            and where they have equal standing but are expressed in different 
            languages, identify the language used in each of the multiple legal 
            names. It is notable that some jurisdictions regard the use of any 
            name other than the primary Legal Name as suspicious.
          type: string
        legalIdentifier:
          description:
            The identifier given to the legal entity by the authority with which it is registered.
          type: string
        identifier:
          description: 
            A formally-issued identifier for the legal entity, other than the 
            one that confers legal status upon it. Legal entities may have any 
            number of identifiers (but only one legal identifier). For example, 
            in many jurisdictions, a business will have one or more tax numbers 
            associated with them which do not, by themselves, confer legal 
            entity status. The Identifier property must not be used to link 
            to the identifier issued by the authority that conferred legal 
            entity status on a business. 
          type: string
        companyType:
          description: 
            The type of the business. e.g. LLC,SA,PLC,GmbH
          type: string
        registeredAddress:
          $ref: '#/components/schemas/AddressReference'
        companyStatus:
          description: 
            The status of the business. The terms 'insolvent', 'bankrupt' and 
            'in receivership', for example, are likely to mean slightly 
            different things with different legal implications in different 
            jurisdictions. XBRL Europe is in the process of defining 
            a cross-border vocabulary for company status. Taking the existing 
            XBRL work as a starting point, the term "Normal Activity" does 
            appear to have cross-border usefulness and this should be used 
            in preference to terms like "trading" or "operating". Best Practice 
            for recording various other status levels is to use the relevant 
            jurisdiction's terms and to do so in a consistent manner. e.g. 
            "Normal Activity", "Insolvent", "Bankrupt", "In Receivership"
          type: string
        companyActivity:
          description: 
            The activity of the business. Several controlled vocabularies exist 
            for recording the activity of a company, many of which map to 
            the UN's ISIC codes. Where a particular controlled vocabulary is 
            in use within a given context, such as SIC codes in the UK, it is 
            acceptable to use these. However, the preferred choice for European 
            interoperability is NACE. 
            e.g. "F42.11" (Construction of roads and motorways)
        location:
          $ref: '#/components/schemas/LocationReference'      
          
    EntityReference:
      allOf:
        - $ref: '#/components/schemas/EntityReference'
        - type: object
          properties:
            "type":
              description:
                Type of the entity according to nature its bussiness.
                e.g. Hotel,Airline,OTA
              type: string
            name:
              description:
                The entity name
              type: string
            "description":
              description:
                Short description of the entity
              type: string
            longDescription:
              description:
                Long description of the entity
              type: string
            logo:
              description:
                The entity logotype file. Should be a valid URI
              type: string
              format: uri
            address:
              $ref: '#/components/schemas/AddressReference'
            contact:
              $ref: '#/components/schemas/ContactReference'
            code:
              $ref: '#/components/schemas/EntityCodesReference'
            socialMedia:
              $ref: '#/components/schemas/SocialMediaListReference'
            media:
              $ref: '#/components/schemas/MediaListReference'
            
    EntityCodesReference:
      description:
        Codes or identifiers of the entity obtained from Industry associations, 
        agencies or associations. For exaple - IATA code
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/CodeReference'
          
    CodeReference:
      description:
        Entity code
      type: object
      required:
        - type
        - code
      properties:
        "type":
          description: 
            Code type. e.g. "IATA"
          type: string
        code: 
          description:
            Code value
          type: string
          
    SocialMediaListReference:
      description:
        List of the social media or online information resources 
        related to the entity
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/SocialMediaReference'
          
    SocialMediaReference:
      description:
        Social media information
      type: object
      required:
        - type
        - uri
      properties:
        "type":
          description: 
            Resource type. e.g. website,facebook,twitter,instagram
          type: string
        "description": 
          description:
            Resource role description
          type: string
        uri:
          description:
            Link to the resource. MUST be a valid URI
          type: string
          format: uri
        
    MediaListReference:
      description:
        List of the media files
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/MediaReference'
          
    MediaReference:
      description:
        Media file
      type: object
      required:
        - type
        - uri
      properties:
        "type":
          description: 
            Resource type. e.g. image,video,pdf,presentation
          type: string
        "description": 
          description:
            Resource role description
          type: string
        uri:
          description:
            Link to the resource. MUST be a valid URI
          type: string
          format: uri    
          